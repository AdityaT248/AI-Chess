{"ast":null,"code":"var _jsxFileName = \"/Users/aditya.thakkar/Documents/AI Chess/src/components/ChessBoard.js\";\nimport React from 'react';\nimport './ChessBoard.css';\nconst ChessBoard = ({\n  board,\n  selectedPiece,\n  onSquareClick,\n  highlightedSquares = [],\n  checkIndicator = null,\n  lastMove = null\n}) => {\n  const renderSquare = (row, col) => {\n    const piece = board[row][col];\n    const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n    const isLightSquare = (row + col) % 2 === 0;\n\n    // Check if this square is a valid move destination\n    const isValidMove = highlightedSquares.some(square => square.row === row && square.col === col);\n\n    // Check if this square contains a king in check\n    const isCheck = checkIndicator && piece && piece.type === 'king' && piece.color === checkIndicator;\n\n    // Check if this square was part of the last move\n    const isLastMoveFrom = lastMove && lastMove.from && lastMove.from.row === row && lastMove.from.col === col;\n    const isLastMoveTo = lastMove && lastMove.to && lastMove.to.row === row && lastMove.to.col === col;\n\n    // Determine piece symbol based on type and color\n    let pieceSymbol = '';\n    if (piece) {\n      switch (piece.type) {\n        case 'pawn':\n          pieceSymbol = piece.color === 'white' ? '♙' : '♟';\n          break;\n        case 'rook':\n          pieceSymbol = piece.color === 'white' ? '♖' : '♜';\n          break;\n        case 'knight':\n          pieceSymbol = piece.color === 'white' ? '♘' : '♞';\n          break;\n        case 'bishop':\n          pieceSymbol = piece.color === 'white' ? '♗' : '♝';\n          break;\n        case 'queen':\n          pieceSymbol = piece.color === 'white' ? '♕' : '♛';\n          break;\n        case 'king':\n          pieceSymbol = piece.color === 'white' ? '♔' : '♚';\n          break;\n        default:\n          pieceSymbol = '';\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `${row}-${col}`,\n      className: `\n          square \n          ${isLightSquare ? 'light' : 'dark'} \n          ${isSelected ? 'selected' : ''} \n          ${isValidMove ? 'valid-move' : ''}\n          ${isCheck ? 'check' : ''}\n          ${isLastMoveFrom ? 'last-move-from' : ''}\n          ${isLastMoveTo ? 'last-move-to' : ''}\n        `,\n      onClick: () => onSquareClick(row, col),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, isValidMove && !piece && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"move-indicator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 35\n      }\n    }), piece && /*#__PURE__*/React.createElement(\"div\", {\n      className: `piece ${piece.color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, pieceSymbol), row === 7 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, String.fromCharCode(97 + col)), col === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rank-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }\n    }, 8 - row));\n  };\n  const renderBoard = () => {\n    const rows = [];\n    for (let row = 0; row < 8; row++) {\n      const cols = [];\n      for (let col = 0; col < 8; col++) {\n        cols.push(renderSquare(row, col));\n      }\n      rows.push(/*#__PURE__*/React.createElement(\"div\", {\n        key: row,\n        className: \"board-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, cols));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chess-board-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chess-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, renderBoard()));\n};\nexport default ChessBoard;","map":{"version":3,"names":["React","ChessBoard","board","selectedPiece","onSquareClick","highlightedSquares","checkIndicator","lastMove","renderSquare","row","col","piece","isSelected","isLightSquare","isValidMove","some","square","isCheck","type","color","isLastMoveFrom","from","isLastMoveTo","to","pieceSymbol","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","String","fromCharCode","renderBoard","rows","cols","push"],"sources":["/Users/aditya.thakkar/Documents/AI Chess/src/components/ChessBoard.js"],"sourcesContent":["import React from 'react';\nimport './ChessBoard.css';\n\nconst ChessBoard = ({ \n  board, \n  selectedPiece, \n  onSquareClick, \n  highlightedSquares = [], \n  checkIndicator = null,\n  lastMove = null\n}) => {\n  const renderSquare = (row, col) => {\n    const piece = board[row][col];\n    const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n    const isLightSquare = (row + col) % 2 === 0;\n    \n    // Check if this square is a valid move destination\n    const isValidMove = highlightedSquares.some(square => square.row === row && square.col === col);\n    \n    // Check if this square contains a king in check\n    const isCheck = checkIndicator && piece && piece.type === 'king' && piece.color === checkIndicator;\n    \n    // Check if this square was part of the last move\n    const isLastMoveFrom = lastMove && lastMove.from && lastMove.from.row === row && lastMove.from.col === col;\n    const isLastMoveTo = lastMove && lastMove.to && lastMove.to.row === row && lastMove.to.col === col;\n    \n    // Determine piece symbol based on type and color\n    let pieceSymbol = '';\n    if (piece) {\n      switch (piece.type) {\n        case 'pawn':\n          pieceSymbol = piece.color === 'white' ? '♙' : '♟';\n          break;\n        case 'rook':\n          pieceSymbol = piece.color === 'white' ? '♖' : '♜';\n          break;\n        case 'knight':\n          pieceSymbol = piece.color === 'white' ? '♘' : '♞';\n          break;\n        case 'bishop':\n          pieceSymbol = piece.color === 'white' ? '♗' : '♝';\n          break;\n        case 'queen':\n          pieceSymbol = piece.color === 'white' ? '♕' : '♛';\n          break;\n        case 'king':\n          pieceSymbol = piece.color === 'white' ? '♔' : '♚';\n          break;\n        default:\n          pieceSymbol = '';\n      }\n    }\n    \n    return (\n      <div \n        key={`${row}-${col}`}\n        className={`\n          square \n          ${isLightSquare ? 'light' : 'dark'} \n          ${isSelected ? 'selected' : ''} \n          ${isValidMove ? 'valid-move' : ''}\n          ${isCheck ? 'check' : ''}\n          ${isLastMoveFrom ? 'last-move-from' : ''}\n          ${isLastMoveTo ? 'last-move-to' : ''}\n        `}\n        onClick={() => onSquareClick(row, col)}\n      >\n        {isValidMove && !piece && <div className=\"move-indicator\"></div>}\n        {piece && <div className={`piece ${piece.color}`}>{pieceSymbol}</div>}\n        {row === 7 && <div className=\"file-label\">{String.fromCharCode(97 + col)}</div>}\n        {col === 0 && <div className=\"rank-label\">{8 - row}</div>}\n      </div>\n    );\n  };\n\n  const renderBoard = () => {\n    const rows = [];\n    for (let row = 0; row < 8; row++) {\n      const cols = [];\n      for (let col = 0; col < 8; col++) {\n        cols.push(renderSquare(row, col));\n      }\n      rows.push(\n        <div key={row} className=\"board-row\">\n          {cols}\n        </div>\n      );\n    }\n    return rows;\n  };\n\n  return (\n    <div className=\"chess-board-container\">\n      <div className=\"chess-board\">\n        {renderBoard()}\n      </div>\n    </div>\n  );\n};\n\nexport default ChessBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}