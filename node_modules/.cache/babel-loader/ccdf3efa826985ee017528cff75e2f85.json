{"ast":null,"code":"var _jsxFileName = \"/Users/aditya.thakkar/Documents/AI Chess/src/components/ChessBoard.js\";\nimport React from 'react';\nimport './ChessBoard.css';\nconst ChessBoard = ({\n  board,\n  selectedPiece,\n  onSquareClick\n}) => {\n  const renderSquare = (row, col) => {\n    const piece = board[row][col];\n    const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n    const isLightSquare = (row + col) % 2 === 0;\n\n    // Determine piece symbol based on type and color\n    let pieceSymbol = '';\n    if (piece) {\n      switch (piece.type) {\n        case 'pawn':\n          pieceSymbol = piece.color === 'white' ? '♙' : '♟';\n          break;\n        case 'rook':\n          pieceSymbol = piece.color === 'white' ? '♖' : '♜';\n          break;\n        case 'knight':\n          pieceSymbol = piece.color === 'white' ? '♘' : '♞';\n          break;\n        case 'bishop':\n          pieceSymbol = piece.color === 'white' ? '♗' : '♝';\n          break;\n        case 'queen':\n          pieceSymbol = piece.color === 'white' ? '♕' : '♛';\n          break;\n        case 'king':\n          pieceSymbol = piece.color === 'white' ? '♔' : '♚';\n          break;\n        default:\n          pieceSymbol = '';\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `${row}-${col}`,\n      className: `square ${isLightSquare ? 'light' : 'dark'} ${isSelected ? 'selected' : ''}`,\n      onClick: () => onSquareClick(row, col),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"piece\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, pieceSymbol), row === 7 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, String.fromCharCode(97 + col)), col === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rank-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }, 8 - row));\n  };\n  const renderBoard = () => {\n    const rows = [];\n    for (let row = 0; row < 8; row++) {\n      const cols = [];\n      for (let col = 0; col < 8; col++) {\n        cols.push(renderSquare(row, col));\n      }\n      rows.push(/*#__PURE__*/React.createElement(\"div\", {\n        key: row,\n        className: \"board-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, cols));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chess-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, renderBoard());\n};\nexport default ChessBoard;","map":{"version":3,"names":["React","ChessBoard","board","selectedPiece","onSquareClick","renderSquare","row","col","piece","isSelected","isLightSquare","pieceSymbol","type","color","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","String","fromCharCode","renderBoard","rows","cols","push"],"sources":["/Users/aditya.thakkar/Documents/AI Chess/src/components/ChessBoard.js"],"sourcesContent":["import React from 'react';\nimport './ChessBoard.css';\n\nconst ChessBoard = ({ board, selectedPiece, onSquareClick }) => {\n  const renderSquare = (row, col) => {\n    const piece = board[row][col];\n    const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n    const isLightSquare = (row + col) % 2 === 0;\n    \n    // Determine piece symbol based on type and color\n    let pieceSymbol = '';\n    if (piece) {\n      switch (piece.type) {\n        case 'pawn':\n          pieceSymbol = piece.color === 'white' ? '♙' : '♟';\n          break;\n        case 'rook':\n          pieceSymbol = piece.color === 'white' ? '♖' : '♜';\n          break;\n        case 'knight':\n          pieceSymbol = piece.color === 'white' ? '♘' : '♞';\n          break;\n        case 'bishop':\n          pieceSymbol = piece.color === 'white' ? '♗' : '♝';\n          break;\n        case 'queen':\n          pieceSymbol = piece.color === 'white' ? '♕' : '♛';\n          break;\n        case 'king':\n          pieceSymbol = piece.color === 'white' ? '♔' : '♚';\n          break;\n        default:\n          pieceSymbol = '';\n      }\n    }\n    \n    return (\n      <div \n        key={`${row}-${col}`}\n        className={`square ${isLightSquare ? 'light' : 'dark'} ${isSelected ? 'selected' : ''}`}\n        onClick={() => onSquareClick(row, col)}\n      >\n        <div className=\"piece\">{pieceSymbol}</div>\n        {row === 7 && <div className=\"file-label\">{String.fromCharCode(97 + col)}</div>}\n        {col === 0 && <div className=\"rank-label\">{8 - row}</div>}\n      </div>\n    );\n  };\n\n  const renderBoard = () => {\n    const rows = [];\n    for (let row = 0; row < 8; row++) {\n      const cols = [];\n      for (let col = 0; col < 8; col++) {\n        cols.push(renderSquare(row, col));\n      }\n      rows.push(\n        <div key={row} className=\"board-row\">\n          {cols}\n        </div>\n      );\n    }\n    return rows;\n  };\n\n  return (\n    <div className=\"chess-board\">\n      {renderBoard()}\n    </div>\n  );\n};\n\nexport default ChessBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}